# how to find circle
#
# Use hough transform to find circle
# https://en.wikipedia.org/wiki/Circle_Hough_Transform
#
# find_circles（）can only find circle that is completed in the range

import sensor, image, time

sensor.reset()
sensor.set_pixformat(sensor.RGB565) # Grayscale more fast
sensor.set_framesize(sensor.QQVGA)
sensor.skip_frames(time = 2000)
clock = time.clock()

while(True):
    clock.tick()

    #lens_corr(1.8)Distortion correction
    img = sensor.snapshot().lens_corr(1.8)

    # Circle has four value: x, y, r, and magnitude。
    # magnitude is the intensity to find circle, the bigger, the better

    # threshold control the circle detected by hough transform. only returned circle that larger than threshold
    x_margin, y_margin, r_margin work together to do the puck detection

    # r_min，r_max和r_step control the radius of test circle。
    decrease the amount of them can augument the performance
    # threshold = 3500 is appropriate。If there are many circles in the vision, add the threshold, vice versa.

    for c in img.find_circles(threshold = 3500, x_margin = 10, y_margin = 10, r_margin = 10,r_min = 2, r_max = 100, r_step = 2):
        img.draw_circle(c.x(), c.y(), c.r(), color = (255, 0, 0))
        print(c.x(), c.y())

    #print("FPS %f" % clock.fps())
